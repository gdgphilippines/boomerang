/* OsloJS - v1.0.0 - 2017-02-23
 * https://github.com/juvarabrera/moonjs
 *
 * Copyright (c) 2017 Juvar Abrera;
 * Licensed under the MIT license 
*/

 jQuery(function($) {
	if (!Modernizr.touch) {
		debiki.Utterscroll.enable();
	}
});
$.fn.disableScroll = function() {
	window.oldScrollPos = $(window).scrollTop();
	$(window).on("scroll.scrolldisabler",function (event) {
		$(window).scrollTop( window.oldScrollPos );
		event.preventDefault();
	});
};
$.fn.enableScroll = function() {
	$(window).off('scroll.scrolldisabler');
};
 var App = {
	Classes: {},
	Utility: {},
	Constant: {},
	KeyboardListener: {},
	Route: {},
	Size: {},
	Controller: {},
	"ready": function(page) {
		this.Route.call(page);
		$(window).scroll(function() {
			if($(window).scrollTop() > 0) {
				$(".action-bar").addClass("shadow");
			} else {
				$(".action-bar").removeClass("shadow");
			}
		});
		// if ('serviceWorker' in navigator) {
		// 	navigator.serviceWorker.register('./service-worker.js');
		// }
	},
	"location": function(controller, action, parameters) {
		App.CONTROLLER = controller.charAt(0).toUpperCase() + controller.slice(1) + "Controller";
		App.ACTION = action;
		if(parameters == undefined)
			parameters = [];
		App.PARAMETERS = parameters;
		window.location = "#/"+controller+"/"+action+"/"+parameters.join("/");
	}, 
	"refresh": function() {
		// $("section.transparent").css("height", $(".cover").outerHeight());
		setTimeout(function() {
			$(".progress").animate({"opacity": "0"})
		}, 1000)
		$("body").enableScroll();
		$("body > .blur").hide();
		$("html").click(function(e) {
			// console.log($(".action-bar i.mdi.mdi-menu").is(":visible"));
			if($(window).outerWidth() <= 700)
				$(".action-bar ul.nav").hide();
			if($(e.target).is("i.mdi.mdi-menu"))
				$(".action-bar ul.nav").show();
		})
		$(".template").css("padding-top", $(".action-bar").outerHeight())
		$(".action-bar i.mdi.mdi-menu").click(function() {
			$(this).find("+ ul.nav").show();
		});
		$("[data-bulaga]").each(function() {
			var val = $(this).attr("data-bulaga").split(" ");
			var options = {};
			var map = {
				"fade-in": ["animation", "FADE_IN"],
				"slide-up": ["animation", "SLIDE_UP"],
				"slide-left": ["animation", "SLIDE_LEFT"],
				"slide-right": ["animation", "SLIDE_RIGHT"],
				"slide-down": ["animation", "SLIDE_DOWN"],
				"bounce": ["bounce", true],
				"repeat": ["repeat", true]
			}
			for(var x in val) {
				if(map.hasOwnProperty(val[x]))
					options[map[val[x]][0]] = map[val[x]][1];
			}
			$(this).bulaga(options);
		});
	},
	getNextEvent: function() {
		// $.ajax({
		// 	type: "get",
		// 	crossOrigin: true,
		// 	cache: true,
		// 	url: "https://hub.gdgx.io/api/v1/chapters/105750470224587854845/events/upcoming?callback=?",
		// 	dataType: 'jsonp',
		// 	data: { 'headers': { 'Accept': 'application/json;' }, 'timeout': 10000 },
		// 	success: function(events) {
		// 		if(events.items.length == 0)
		// 			$("#upcoming").html('<h3>Message</h3><p>No incoming events for now. Add, like, and follow our social media pages to get the latest updates for our upcoming events!</p>');
		// 		else {
		// 			var nextEvent = events.items[0];
		// 			var datex = new Date(nextEvent.start.substring(0,19));
		// 			var tmp = document.createElement("DIV");
		// 			tmp.innerHTML = nextEvent.about;
		// 			$("#upcoming").html('<h3>'+nextEvent.title+'</h3><small>'+dateFormat(datex, "dddd, mmmm dS, yyyy, h:MM TT")+'</small><p>'+tmp.textContent.split(/\s+/).slice(0,20).join(" ")+"..."+'</p> <p class="right"><a class="button" href="'+nextEvent.eventUrl+'" target="_blank">Go to website</a></p>');
		// 		}
		// 	}
		// });
		$.ajax({
			type: "get",
			crossOrigin: true,
			cache: true,
			url: "https://api.meetup.com/gdgphilippines/events?callback=?",
			dataType: 'jsonp',
			data: { 'headers': { 'Accept': 'application/json;' }, 'timeout': 10000 },
			success: function(events) {
				if(events.data.length > 0) {
					var ne = events.data[0];
					var datex = new Date(ne.time);
					$("#upcoming").html('<h3>'+ne.name+'</h3>'+ne.description+
						'<p><i class="mdi mdi-map-marker" style="margin-right: 12px"></i>'+ne.venue.city+', '+ne.venue.localized_country_name+'</p>'+
						'<p><i class="mdi mdi-calendar" style="margin-right: 12px"></i>'+datex.toDateString()+', '+datex.toLocaleTimeString()+'</p>'+
						'<p><i class="mdi mdi-account-multiple" style="margin-right: 12px"></i>'+ne.yes_rsvp_count+' attending members</p>'+
						'<p class="right"><a class="button" href="'+ne.link+'" target="_blank"><i class="mdi mdi-ticket" style="margin-right: 12px"></i>Apply for a Ticket</a></p>');	
				} else {
					$("#upcoming").html('<h3>Message</h3><p>No incoming events for now. Add, like, and follow our social media pages to get the latest updates for our upcoming events!</p>');	
				}
				// if(events.items.length == 0)
				// 	$("#upcoming").html('<h3>Message</h3><p>No incoming events for now. Add, like, and follow our social media pages to get the latest updates for our upcoming events!</p>');
				// else {
				// 	var nextEvent = events.items[0];
				// 	var datex = new Date(nextEvent.start.substring(0,19));
				// 	var tmp = document.createElement("DIV");
				// 	tmp.innerHTML = nextEvent.about;
				// 	$("#upcoming").html('<h3>'+nextEvent.title+'</h3><small>'+dateFormat(datex, "dddd, mmmm dS, yyyy, h:MM TT")+'</small><p>'+tmp.textContent.split(/\s+/).slice(0,20).join(" ")+"..."+'</p> <p class="right"><a class="button" href="'+nextEvent.eventUrl+'" target="_blank">Go to website</a></p>');
				// }
			}
		});
	},
	getBlogPosts: function(c) {
		$.ajax({
			type: "get",
			crossOrigin: true,
			cache: true,
			url: "https://www.blogger.com/feeds/1542160289050145778/posts/default/?alt=json-in-script&callback=?",
			dataType: 'jsonp',
			data: { 'headers': { 'Accept': 'application/json;' }, 'timeout': 10000 },
			success: function(posts) {
				if(c) c(posts);
			}
		});
	},
	displaySpeakers: function() {
		var speakers = [
			"johnny-benitez",
			"gail-tan",
			"jonathan-joson",
			"sami-kizilbash",
			"mete-atamel",
			"takuo-suzuki",
			"kazunori-sato",
			"albert-padin",
			"yohan-totting",
			"josan-dometita",
			"cristopher-david",
			"elymar-apao",
			"reymart-canuel",
			"toni-jan-keith-monserrat",
			"benj-tupas",
			"claudine-rodriguez",
			"anne-michelle-santos",
			"ambe-tierro",
			"charibeth-cheng",
			"duephil-kaufmann",
			"dexter-santos",
			"allan-tan",
			"brian-tan-seng",
			"karen-matias",
			"kristine-mae-adlaon",
			"jordan-deja",
			"ellaine-de-guzman",
			"goldy-yancha",
			"joem-petilla",
			"luna-cruz",
			"julie-ann-alonzo",
			"mara-ang",
			"stephanie-sy",
			"derrick-alain-mapagu",
			"grace-sojor",
			"valenice-balace",
			"joyce-guiao",
			"tal-de-guzman",
			"micaela-reyes",
			"raymund-vidar",
			"merlin-suarez",
			"warangkana-fajardo",
			"mark-anthony-panizales",
			"ben-adrian-sarmiento",
			"wayne-manuel",
			"gino-tria",
			"jasmin-caronan",
			"mac-valmores",
			"mika-aldaba",
			"vin-lim",
			"vicky-sy",
			"nadine-jamila",
			"patricia-faustino",
			"paul-gadi",
			"adrian-vincent-tayag",
			"howard-go",
			"pamela-cajilig",
			"neil-patrick-del-gallego",
			"alex-alabiso"
		];
		for(var s in speakers) {
			if(Data.speakers.hasOwnProperty(speakers[s])) {
				var x = Data.speakers[speakers[s]];
				$("section[name=speakers] .vertical-scroll .content").append('<div class="item">' + 
					'<img src="assets/images/speakers/'+x.name+'.jpg">' + 
					'<span>'+x.name+'</span>' + 
					'<small>'+x.title+'</small>' + 
				'</div>');
			}
		}
	}
}
App.Controller["BeController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		App.location("home", "index", []);
	},
	"a-sponsor": function(parameters) {
		App.View.setTitle("Become a Sponsor");
		return App.View.render();
	},
	"a-volunteer": function(parameters) {
		App.View.setTitle("Become a Volunteer");
		return App.View.render();
	}
}
App.Controller["BlogController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		return App.View.render();
	},
	"error": function(parameters) {
		return App.View.render();
	},
	"view": function(parameters) {
		App.getBlogPosts(function(posts) {
			var sp = false;
			$.each(posts.feed.entry, function(index, post) {
				if(post.link[4].href.substring(30) == parameters[0]) {
					sp = {
						"title": post.title.$t,
						"date": dateFormat(post.published.$t.substring(0,19), "dddd, mmmm dS, yyyy, h:MM TT"),
						"content": post.content.$t 
					};
				}
			});
			if(sp == false) {
				App.location("blog", "error", []);
			} else {
				App.View.setJson(sp);
			}
			App.View.render();
		});
		return 
			App.View.render();
	}
}
App.Controller["CertificatesController"] = {
	"construct": function(parameters) {

	},
	"generate": function(parameters) {
		return App.View.render();
	}
}
App.Controller["CommunityController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		App.View.setTitle("Community Guidelines");
		App.location("community", "guidelines", []);
	},
	"guidelines": function(parameters) {
		return App.View.render();
	}
}
App.Controller["ErrorController"] = {
	"construct": function(parameters) {

	}, 
	"index": function(parameters) {
		alert("Error");
	},
	"controller-not-found": function(parameters) {
		$(".template").html("<div style=\"padding: 24px\"><h1>Error</h1> Controller, "+parameters[0]+", not found.<br><br><a href=\"#/"+App.Utility.getControllerCode(parameters[0])+"/"+parameters[1]+"\" class=\"button\">Refresh</a></div>");
		App.refresh();
	},
	"action-not-found": function(parameters) {
		$(".template").html("<div style=\"padding: 24px\"><h1>Error</h1> Action, "+parameters[1]+", in "+parameters[0]+" not found.<br><br><a href=\"#/"+App.Utility.getControllerCode(parameters[0])+"/"+parameters[1]+"\" class=\"button\">Refresh</a></div>");
		App.refresh();
	},
	"template-not-found": function(parameters) {
		$(".template").html("<div style=\"padding: 24px\"><h1>Error</h1> Template, "+parameters[0]+", in app/views/ not found.<br><br><a href=\"#/"+App.Utility.getControllerCode(parameters[0])+"/"+parameters[1]+"\" class=\"button\">Refresh</a></div>");
		App.refresh();
	},
	"page-not-found": function(parameters) {
		$(".template").html("<div style=\"padding: 24px\"><h1>Error</h1> Page, "+parameters[1]+".html, in app/views/"+parameters[0]+"/ not found.<br><br><a href=\"#/"+App.Utility.getControllerCode(parameters[0])+"/"+parameters[1]+"\" class=\"button\">Refresh</a></div>");
		App.refresh();
	}
}
App.Controller["EventsController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		return App.View.render();
	},
	"next17": function(parameters) {
		App.View.setTitle("Google Cloud Next 17 Extended Manila");
		return App.View.render();
	},
	"tensorflow-dev-summit": function(parameters) {
		return App.View.render();
	}
}
App.Controller["HomeController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		
		return App.View.render();
	}
}
App.Controller["TeamController"] = {
	"construct": function(parameters) {

	},
	"index": function(parameters) {
		
		return App.View.render();
	}
}
App["Constant"] = {
	"DESKTOP_MINIMUM": 1024,
	"TABLET_MINUMUM": 768,
	"MOBILE_MINIMUM": 425,
	"DEFAULT_CONTROLLER": "home",
	"DEFAULT_ACTION": "index",
	"DEFAULT_TEMPLATE": "template",
	"PREFIX": ""
}
App["Controller"]["construct"] = function() {
	
}
App["KeyboardListener"] = {
	"keys": {},
	"ready": function() {
		function key(code) {
			if(App.KeyboardListener.keys.hasOwnProperty(code))
				return true;
			return false;
		}
		$(document).keydown(function(e) {
			App.KeyboardListener.keys[e.which] = true;

			var shift = key(16),
				ctrl = key(17),
				alt = key(18);

			// if(shift && key(40)) {

			// }
		})
	}
}
App["Route"] = {
	"call": function(dir) {
		var directory = dir.substring(1).split("/");
		directory[0] = (directory[0] == "" || directory[0] == undefined) ? App.Constant.DEFAULT_CONTROLLER : directory[0];
		directory[1] = (directory[1] == "" || directory[1] == undefined) ? App.Constant.DEFAULT_ACTION : directory[1];
		App.CONTROLLER = directory[0].charAt(0).toUpperCase() + directory[0].slice(1) + "Controller";
		App.ACTION = directory[1];
		var parameters = directory.splice(2);
		App.Controller.construct(parameters);
		App.View.construct(parameters);
		$("body").disableScroll();
		$("body > .blur").show();
		$(".progress").css({"opacity": "1"})
		if(App.Controller.hasOwnProperty(App.CONTROLLER)) {
			if(App.Controller[App.CONTROLLER].hasOwnProperty("construct"))
				App.Controller[App.CONTROLLER].construct(parameters);
			if(App.Controller[App.CONTROLLER].hasOwnProperty(App.ACTION)) {
				App.Controller[App.CONTROLLER][App.ACTION](parameters);
			} else {
				App.location("error", "action-not-found", [App.CONTROLLER, App.ACTION]);
			}
		} else {
			App.location("error", "controller-not-found", [App.CONTROLLER, App.ACTION]);
		}
	}
}
App["Size"] = {
	inDesktop: function() {
		if($(window).outerWidth() <= App.Constant.DESKTOP_MINIMUM)
			return true;
		return false;
	},
	inTablet: function() {
		if($(window).outerWidth() <= App.Constant.TABLET_MINUMUM)
			return true;
		return false;
	},
	inMobile: function() {
		if($(window).outerWidth() <= App.Constant.MOBILE_MINIMUM)
			return true;
		return false;
	}
}
App["Utility"] = {
	getControllerCode: function(c) {
		return c.substring(0, c.length - 10).toLowerCase()
	}
}
App["View"] = {
	"construct": function(parameters) {
		this.setTemplate(App.Constant.DEFAULT_TEMPLATE);
		$(window).scrollTop(0);
		// $(".template").html("");
	},
	"setTemplate": function(template) {
		this["TEMPLATE"] = template;
		return this;
	},
	"data": {},
	"set": function(name, val) {
		this.data[name] = val;
	},
	"setJson": function(json) {
		for(var i in json)
			this.data[i] = json[i];
	},
	setTitle: function(title) {
		document.title = title;
	},
	"render": function() {
		var template = this.TEMPLATE;
		if(template == false) {
			this.loadPage(false);
		} else {
			$.ajax({
				"url": "views/"+template+".html",
				"cache": true,
				"success": function(html) {
					App.View.loadPage(html);
				},
				"error": function(e) {
					App.location("error", "template-not-found", [template, App.Utility.getControllerCode(App.CONTROLLER), App.ACTION])
				}
			});
			// var xhttp = new XMLHttpRequest();
			// xhttp.addEventListener("load", function() {
			// 	var html = this.responseText;
			// 	if (this.readyState == 4 && this.status == 200) {
			// 		App.View.loadPage(html);
			// 	} else {
			// 		App.location("error", "template-not-found", [template, App.Utility.getControllerCode(App.CONTROLLER), App.ACTION])
			// 	}
			// }, false);
			// xhttp.addEventListener("error", function() {
			// 	App.location("error", "template-not-found", [template, App.Utility.getControllerCode(App.CONTROLLER), App.ACTION])
			// });
			// xhttp.addEventListener("progress", function(e) {
			// if(e.lengthComputable) {
			// 	$(".progress .determinate").css("width", ((e.loaded/e.total)*100)+"%");
			// }
			// });
			// xhttp.open("GET", "app/views/"+template+".html", true);
			// xhttp.send();
		}
	},
	loadPage: function(html) {
		// var xhttp = new XMLHttpRequest();
		// xhttp.addEventListener("load", function() {
		// 	var html2 = this.responseText;
		// 	if (this.readyState == 4 && this.status == 200) {
		// 		if(html == false) {
		// 			$(".template").html(html2);
		// 		} else {
		// 			$(".template").html(html);
		// 			$("<div></div>").html(html2).children().each(function() {
		// 				$(".template").html($(".template").html().replace(new RegExp("{{"+$(this).attr("id")+"}}", "g"), $(this).html()));
		// 			});
		// 		}
		// 		$(".template").attr("controller", App.Utility.getControllerCode(App.CONTROLLER))
		// 					  .attr("action", App.ACTION);
		// 		App.refresh();
		// 	} else {
		// 		App.location("error", "page-not-found", [App.Utility.getControllerCode(App.CONTROLLER), App.ACTION]);
		// 	}
		// }, false);
		// xhttp.addEventListener("error", function() {
		// 	App.location("error", "page-not-found", [App.Utility.getControllerCode(App.CONTROLLER), App.ACTION])
		// });
		// xhttp.addEventListener("progress", function(e) {
		// 	if(e.lengthComputable) {
		// 		$(".progress .determinate").css("width", ((e.loaded/e.total)*100)+"%");
		// 		console.log((e.loaded/e.total));
		// 		if((e.loaded/e.total) == 1) {
		// 			setTimeout(function() {
		// 				$(".progress").animate({"opacity": "0"})
		// 			}, 1000);
		// 		}
		// 	}
		// });
		// xhttp.open("GET", "app/views/"+App.Utility.getControllerCode(App.CONTROLLER)+"/"+App.ACTION+".html", true);
		// xhttp.send();
		$.ajax({
			"cache": true,
			"url": "views/"+App.Utility.getControllerCode(App.CONTROLLER)+"/"+App.ACTION+".html",
			"success": function(html2) {
				for(var i in App.View.data) {
					html2 = html2.replace(new RegExp("{{"+i+"}}", "g"), App.View.data[i]);
				}
				if(html == false) {
					$(".template").html(html2);
				} else {
					$(".template").html(html);
					$("<div></div>").html(html2).children().each(function() {
						$(".template").html($(".template").html().replace(new RegExp("{{"+$(this).attr("id")+"}}", "g"), $(this).html()));
					});
				}
				$(".template").attr("controller", App.Utility.getControllerCode(App.CONTROLLER))
							  .attr("action", App.ACTION);
				App.refresh();
			},
			"error": function(e) {
				App.location("error", "page-not-found", [App.Utility.getControllerCode(App.CONTROLLER), App.ACTION])
			}
		})
	}
}